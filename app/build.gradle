apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.yinglan.commontools"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("Boolean", "IS_CHECK_VERSION_UPDATE", "true")
        if (project.hasProperty('VERSION_CODE_PARA')) {
            versionCode Integer.parseInt(VERSION_CODE_PARA)
        }
        if (project.hasProperty('VERSION_NAME_PARA')) {
            versionName VERSION_NAME_PARA
        }
    }

    signingConfigs {
        release {

        }
        debug {
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            //shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

android.applicationVariants.all { variant ->

    variant.outputs.each { output ->
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.apk')) {
            //def fileName = outputFile.name;
            def fileName = "***.apk";
            if (variant.buildType.name.equals('release')) {
                fileName = "***_release.apk";
            }

            if (variant.buildType.name.equals('debug')) {
                fileName = "***_debug.apk";
            }

            if (android.defaultConfig.versionName != null) {
                fileName = fileName.replace(".apk", "_${android.defaultConfig.versionName}.apk")
            }
            if (project.hasProperty('OUT_PUT_APK_SUFFIX_PARA')) {
                fileName = fileName.replace(".apk", "_${OUT_PUT_APK_SUFFIX_PARA}.apk")
            }
            def today = new Date().format('yyyy-MM-dd-HH:mm');
            // APK输出文件名规则：aiyou_版本名_后缀名_release.apk
            fileName = fileName.replace(".apk", "_${today}.apk")
            if (project.hasProperty('OUT_PUT_DIR_PARA')) {
                File output_dir1 = file("${OUT_PUT_DIR_PARA}");
                output.outputFile = new File(output_dir1, fileName)
                println "输出文件位置： " + output.outputFile
                //}
            } else {
                output.outputFile = new File(fileName)
                println "输出文件位置： " + output.outputFile
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.0'
    testCompile 'junit:junit:4.12'
    compile project(':common')
}
